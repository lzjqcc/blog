<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzj.dao.MessageDao" >
    <resultMap id="messageMap" type="com.lzj.domain.MessageInfo">
        <id column="id" property="id"></id>
        <result column="push_message" property="pushMessage"></result>
        <result column="from_account_id" property="fromAccountId"/>
        <result column="to_account_id" property="toAccountId"/>
        <result column="create_time" property="createTime"/>
        <result column="type" property="type"/>
        <result column="flag" property="flag"/>
    </resultMap>
    <sql id="columns">
        push_message,
        from_account_id,
        to_account_id,
        create_time,
        type,
        flag
    </sql>
    <insert id="insertMessage" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO tb_message_info
        (<include refid="columns" ></include>)
        VALUES (#{pushessage},#{fromAccountId},#{toAccountId},#{createTime},#{type},#{flag})
    </insert>
    <select id="getMessageByToUserIdAndType" resultMap="messageMap" >
        SELECT id ,<include refid="columns"></include>
        FROM tb_message_info
        WHERE to_account_id=#{toAccountId} AND type=#{type}
    </select>
    <select id="getMessages" resultMap="messageMap">
        select id,<include refid="columns"></include>
        FROM tb_message_info
        WHERE
        <foreach collection="map" index="key" item="value" separator="and">
            <if test="key!=null">
                ${key}=#{value}
            </if>
        </foreach>
    </select>
    <update id="updateType">
        update tb_message_info SET type=#{type} where id=#{id}
    </update>
    <select id="findMessagesByDto" resultMap="messageMap">
        SELECT  id,<include refid="columns"></include>
        FROM  tb_message_info
        WHERE
        1=1
        <if test="param.toAccountId != null">
            and to_account_id = #{param.toAccountId}
        </if>
        <if test="param.type != null">
            and type = #{param.type}
        </if>
        <if test="param.flag != null">
            and flag = #{param.flag}
        </if>
    </select>
</mapper>